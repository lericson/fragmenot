tree_search:
    # Number of steps. Order is breadth-first search.
    # With an average degree of 6, finding all paths of k length deep needs
    # 6**k steps.
    #   6**k: 6, 36, 216, 1296, 7776, 46656, 279936
    steps: 30000

    # Maximum size of the search tree. If a floating-point number, it this is a
    # multiplied by the number of steps. If an integer, taken as is.
    max_size: 6.0

prm:
    # Size in meters of each bin in the spatial index. This is used to cull the
    # number of attempted connections per node.
    bin_size: 20

    # Upper and lower bounds to set on the Z coordinates in roadmap generation.
    z_bounds: [1.5, 3.5]

    # T r i a n g u l a r    t e s s e l l a t i o n .
    regular_grid: true

world:
    resolution:   0.4

gui:
    # Whether to show jump edges as their own lines or not. They will be single
    # lines between their endpoints, though the trajectory will be correctly
    # computed as the sum of all the steps that a jump edge corresponds to.
    show_jumps: true

    perspective: true
    follow: true
    fov: 120

parame:

    # Profiles are an easy way to switch between option sets.
    profile: [shortrange, pvinf, ours]

    stationary:
        gui:
            follow: false
            fov: [65, 45]

    shorter:
        prm:
            max_dist: 1.0
        sensors:
            radius: 3.0
            step_size: 0.25

    microrange:
        prm:
            max_dist: 0.75
        sensors:
            radius: 1.5
            step_size: 0.25

    tinyrange:
        prm:
            max_dist: 1.0
        sensors:
            radius: 2.0
            step_size: 0.25

    shortrange:
        prm:
            max_dist: 1.5
        sensors:
            radius: 3.0
            step_size: 0.25

    longrange:
        prm:
            max_dist: 1.5
        sensors:
            radius: 6.0
            step_size: 0.25

    jesus:
        sensors:
            radius: 10000.0

    # Our experiment conditions
    pv0000: {prevision: {max_distance:   0.00}}
    pv0010: {prevision: {max_distance:   0.10}}
    pv0025: {prevision: {max_distance:   0.25}}
    pv0050: {prevision: {max_distance:   0.50}}
    pv0100: {prevision: {max_distance:   1.00}}
    pv0200: {prevision: {max_distance:   2.00}}
    pv0300: {prevision: {max_distance:   3.00}}
    pv0400: {prevision: {max_distance:   4.00}}
    pv0500: {prevision: {max_distance:   5.00}}
    pv0800: {prevision: {max_distance:   8.00}}
    pv1200: {prevision: {max_distance:  12.00}}
    pv1600: {prevision: {max_distance:  16.00}}
    pvinf:  {prevision: {max_distance: 100.00}}

    ct0000: {tree_search: {min_area: 0.00}}
    ct0025: {tree_search: {min_area: 0.25}}
    ct0200: {tree_search: {min_area: 2.00}}
    ct0600: {tree_search: {min_area: 6.00}}

    ours:       {}
    gn:         {tree_search: {score_function: gn}}
    bfs:        {tree_search: {path_selection: shortest}}
    uniform:    {tree_search: {weight_function: uniform}}
    coloform:   {tree_search: {weight_function: colored_uniform}}
    nojump:     {prm: {max_degree_jump: 0}}
    tree:       {tree_search: {path_selection: shortest}, exploration: {jump_edges: false}}

    maze:
        world:
            resolution: 0.45
            filename: ./resources/maze.ot
        prm:
            z_bounds: [1.0, 2.5]

    demo:
        gui:
            follow: false
        exploration:
            start_position: [0.0, 0.0, 1.0]

    # This configuration loads pretty fast
    test:
        world:
            resolution:   0.8
        sensors:
            radius:       4.0
        prm:
            max_dist:     2.0
        prevision:
            max_distance: 100.0
        tree_search:
            steps:        60000
        exploration:
            close_on_finish: false
